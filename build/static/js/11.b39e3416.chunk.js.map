{"version":3,"sources":["../node_modules/@coreui/icons-pro/js/solid/cis-eye.js","reusable/reusables.js","../node_modules/@coreui/icons/js/free/cil-pencil.js","../node_modules/@coreui/icons/js/free/cil-trash.js","../node_modules/@coreui/icons-pro/js/linear/cil-eye.js","../node_modules/@coreui/icons-pro/js/linear/cil-eye-slash.js","views/settings/Settings.js"],"names":["cisEye","getStatusBadge","status","getInterestsBadge","interests","ViewBtn","props","render","history","color","variant","size","onClick","push","ViewRoute","content","EditBtn","EditRoute","cilPencil","RemoveBtn","removeItem","cilTrash","FormatTimestamp","dateToString","seconds","dateObject","Date","Intl","DateTimeFormat","year","month","day","hour","minute","format","toString","cilEye","cilEyeSlash","adminFields","key","_style","width","label","sorter","filter","postFields","Settings","state","admins","newAdminEmail","loading","handleChangeEmail","bind","removeAdmin","assignAdmin","event","this","setState","target","value","isAdmin","forEach","admin","email","alert","setAdmin","db","a","setDoc","doc","preventDefault","firebaseDB","componentDidMount","id","Swal","fire","text","concat","showCancelButton","icon","iconColor","confirmButtonText","confirmButtonColor","then","result","isConfirmed","deleteAdmin","deleteDoc","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","title","error","console","log","cname","name","ca","decodeURIComponent","document","cookie","split","i","length","c","charAt","substring","indexOf","getAdmins","adminCol","collection","getDocs","adminSnapshot","adminList","docs","map","data","getPosts","postCol","postSnapshot","postList","posts","getCookie","xs","style","margin","items","fields","columnFilter","tableFilter","cleaner","itemsPerPageSelect","itemsPerPage","hover","pagination","clickableRows","scopedSlots","item","maxLine","ellipsis","trimRight","basedOn","createdOn","textAlign","striped","type","placeholder","onChange","React","Component"],"mappings":"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","file":"static/js/11.b39e3416.chunk.js","sourcesContent":["export const cisEye = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M256,160.691A87.309,87.309,0,1,0,343.309,248,87.31,87.31,0,0,0,256,160.691ZM276,268H236V228h40Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M397.222,130.864l-.218-.222c-77.75-77.749-204.258-77.749-282.008,0L16,233.554v28.892l98.778,102.69.218.222a199.637,199.637,0,0,0,282.008,0l99-102.912V233.554ZM343.193,335.193A123.311,123.311,0,1,1,379.309,248,122.5,122.5,0,0,1,343.193,335.193Z' class='ci-primary'/>\"]","import React from 'react'\nimport { CButton } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilPencil, cilTrash } from '@coreui/icons'\nimport { Route } from \"react-router-dom\";\nimport { cisEye } from '@coreui/icons-pro';\n\nexport const getStatusBadge = status => {\n  switch (status) {\n    case 'Active': return 'success'\n    case 'Inactive': return 'secondary'\n    case 'Pending': return 'warning'\n    case 'Banned': return 'danger'\n    default: return 'primary'\n  }\n}\n\nexport const getInterestsBadge = interests => {\n  switch (interests) {\n    case 'Computing': return 'secondary'\n    case 'Technology': return 'success'\n    case 'Physics': return 'info'\n    case 'Law': return 'warning'\n    case 'Business': return 'danger'\n    case 'Other': return 'primary'\n\n    default: return 'primary'\n  }\n}\n\nexport const ViewBtn = (props) => {\n  return (\n    <Route render={({ history }) => (\n      <CButton\n        color=\"secondary\"\n        variant=\"ghost\"\n        size=\"sm\" onClick={() => { history.push(props.ViewRoute) }}><CIcon content={cisEye} /></CButton>\n    )} />\n  )\n}\n\nexport const EditBtn = (props) => {\n  return (\n    <Route render={({ history }) => (\n      <CButton\n        color=\"info\"\n        variant=\"outline\"\n        size=\"sm\" onClick={() => { history.push(props.EditRoute) }}><CIcon content={cilPencil} /></CButton>\n    )} />\n  )\n}\n\nexport const RemoveBtn = (props) => {\n  return (\n    <CButton\n      size=\"sm\"\n      color=\"danger\"\n      variant=\"outline\"\n      onClick={props.removeItem}\n    ><CIcon content={cilTrash} /></CButton>\n  )\n}\n\nexport const FormatTimestamp = (props) => {\n  var dateToString = \"N/A\";\n\n  if (props.seconds !== \"N/A\") {\n\n    var seconds = props.seconds;\n    var dateObject = new Date(seconds * 1000);\n    var date = new Intl.DateTimeFormat(\"en-US\", { year: \"numeric\", month: \"2-digit\", day: \"2-digit\", hour: \"2-digit\", minute: \"2-digit\" }).format(dateObject);\n    dateToString = date.toString();\n\n  }\n\n  return (\n    dateToString\n  )\n}","export const cilPencil = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M29.663,482.25l.087.087a24.847,24.847,0,0,0,17.612,7.342,25.178,25.178,0,0,0,8.1-1.345l142.006-48.172,272.5-272.5A88.832,88.832,0,0,0,344.334,42.039l-272.5,272.5L23.666,456.541A24.844,24.844,0,0,0,29.663,482.25Zm337.3-417.584a56.832,56.832,0,0,1,80.371,80.373L411.5,180.873,331.127,100.5ZM99.744,331.884,308.5,123.127,388.873,203.5,180.116,412.256,58.482,453.518Z' class='ci-primary'/>\"]","export const cilTrash = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M96,472a23.82,23.82,0,0,0,23.579,24H392.421A23.82,23.82,0,0,0,416,472V152H96Zm32-288H384V464H128Z' class='ci-primary'/><rect width='32' height='200' x='168' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='200' x='240' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><rect width='32' height='200' x='312' y='216' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M328,88V40c0-13.458-9.488-24-21.6-24H205.6C193.488,16,184,26.542,184,40V88H64v32H448V88ZM216,48h80V88H216Z' class='ci-primary'/>\"]","export const cilEye = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M256,144.927A103.309,103.309,0,1,0,359.309,248.236,103.426,103.426,0,0,0,256,144.927Zm0,174.618a71.309,71.309,0,1,1,71.309-71.309A71.39,71.39,0,0,1,256,319.545Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M397.222,131.1l-.218-.223c-77.75-77.749-204.258-77.749-282.008,0L16,233.79v28.893l98.778,102.689.218.222a199.409,199.409,0,0,0,282.008,0l99-102.911V233.79ZM464,249.79l-89.732,93.285a167.409,167.409,0,0,1-236.536,0L48,249.79v-3.107L137.729,153.4c65.247-65.13,171.3-65.13,236.542,0L464,246.683Z' class='ci-primary'/><rect width='32' height='32' x='240' y='232' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/>\"]","export const cilEyeSlash = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M397.222,131.1l-.218-.223C333.831,67.707,238.47,55.862,163.228,95.346l23.938,23.939c61.571-27.691,136.573-16.327,187.105,34.115L464,246.683v3.107l-71.744,74.585,22.63,22.63L496,262.683V233.79Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M352.8,284.33A103.307,103.307,0,0,0,219.907,151.438L246.1,177.63a71.228,71.228,0,0,1,80.507,80.508Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M369.9,347.268l-33.831-33.831c.088-.108.179-.212.266-.32l-22.805-22.806c-.083.113-.169.222-.253.334l-99.681-99.681c.112-.083.221-.17.334-.253L191.12,167.906c-.108.087-.213.179-.321.266L38.627,16H16V38.627l95.689,95.689L16,233.79v28.893l98.778,102.689.218.222A199.732,199.732,0,0,0,367.372,390l106,106H496V473.373L392.537,369.911Zm-177.157-131.9L288.871,311.5a71.28,71.28,0,0,1-96.133-96.133ZM137.729,343.073,48,249.79v-3.107l86.319-89.737,35.065,35.064A103.248,103.248,0,0,0,312.226,334.853l32.007,32.007C279.723,406.875,193.711,398.955,137.729,343.073Z' class='ci-primary'/>\"]","import React from 'react'\nimport CIcon from '@coreui/icons-react';\nimport Swal from 'sweetalert2';\nimport { Route } from 'react-router';\n\n// Firebase\nimport { collection, getDocs, setDoc, doc, deleteDoc } from 'firebase/firestore';\nimport { firebaseDB } from 'src/reusable/firebaseConfig';\n\nimport LinesEllipsis from 'react-lines-ellipsis'\nimport { cilTrash } from '@coreui/icons';\nimport { CCardBody, CButton, CDataTable, CCol, CCard, CCardHeader, CBadge, CCardFooter, CRow, CInput } from '@coreui/react'\nimport { EditBtn, RemoveBtn, getStatusBadge, FormatTimestamp } from 'src/reusable/reusables';\nimport { v4 as uuidv4 } from 'uuid';\nimport { cilEye, cilEyeSlash } from '@coreui/icons-pro';\n\nconst adminFields = [\n  { key: 'email', _style: { width: '10%' }, label: 'Email' },\n  { key: 'remove', label: '', _style: { width: '0%' }, sorter: false, filter: false },\n]\n\nconst postFields = [\n  { key: 'username' },\n  { key: 'content', _style: { width: '50%' } },\n  { key: 'createdOn', label: \"Created on\" },\n  { key: 'status', _style: { width: '10%' } },\n  { key: 'visibility', label: '', _style: { width: '0%' }, sorter: false, filter: false },\n  { key: 'edit', label: '', _style: { width: '0%' }, sorter: false, filter: false },\n  { key: 'remove', label: '', _style: { width: '0%' }, sorter: false, filter: false },\n]\n\n\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Common state\n    this.state = {\n      admins: [],\n      newAdminEmail: \"\",\n      loading: false,\n    };\n\n    this.handleChangeEmail = this.handleChangeEmail.bind(this);\n    this.removeAdmin = this.removeAdmin.bind(this);\n    this.assignAdmin = this.assignAdmin.bind(this);\n\n  }\n\n\n  handleChangeEmail(event) {\n    this.setState({ newAdminEmail: event.target.value });\n  }\n\n  assignAdmin(event) {\n    // var autoID = uuidv4();\n    // console.log(autoID);\n\n    let isAdmin = false;\n    this.state.admins.forEach(admin => {\n      if (admin.email === this.state.newAdminEmail) {\n        alert('Admin ' + this.state.newAdminEmail + ' already exists!');\n        isAdmin = true;\n      }\n    })\n\n    if (this.state.newAdminEmail === '') {\n      alert('Enter new admin`s email!');\n    }\n\n    if (!isAdmin && this.state.newAdminEmail) {\n\n      const setAdmin = async (db) => {\n        await setDoc(doc(db, \"admins\", this.state.newAdminEmail), {\n          email: this.state.newAdminEmail,\n        });\n        event.preventDefault();\n      }\n      setAdmin(firebaseDB);\n      this.componentDidMount();\n      this.setState({ newAdminEmail: \"\" })\n    }\n  }\n\n  removeAdmin(id, email) {\n    if (!email) {\n      email = \"this\";\n    }\n    Swal.fire({\n\n      text: 'Delete '.concat(email).concat(' from admin? '),\n      showCancelButton: true,\n      icon: 'error',\n      iconColor: '#e55353',\n      confirmButtonText: `Yes, delete it!`,\n      confirmButtonColor: '#e55353'\n    }).then((result) => {\n      if (result.isConfirmed) {\n\n        try {\n          const deleteAdmin = async (db) => {\n            await deleteDoc(doc(db, \"admins\", email));\n          }\n\n          deleteAdmin(firebaseDB);\n\n          const Toast = Swal.mixin({\n            toast: true,\n            position: 'bottom-end',\n            showConfirmButton: false,\n            timer: 3000,\n            timerProgressBar: false,\n            didOpen: (toast) => {\n              toast.addEventListener('mouseenter', Swal.stopTimer)\n              toast.addEventListener('mouseleave', Swal.resumeTimer)\n            }\n          })\n\n          Toast.fire({\n            icon: 'success',\n            title: 'Deleted successfully'\n          })\n\n          this.componentDidMount();\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    })\n  }\n\n  getCookie(cname) {\n    let name = cname + \"=\";\n    let decodedCookie = decodeURIComponent(document.cookie);\n    let ca = decodedCookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return \"\";\n  }\n\n  componentDidMount() {\n    this.setState({ loading: true })\n\n    const getAdmins = async (db) => {\n      const adminCol = collection(db, 'admins');\n      const adminSnapshot = await getDocs(adminCol);\n      const adminList = adminSnapshot.docs.map(doc => doc.data());\n      this.setState({ admins: adminList });\n\n      this.setState({ loading: false })\n\n      this.setState({ loading: true })\n\n      const getPosts = async (db) => {\n        const postCol = collection(db, 'posts');\n        const postSnapshot = await getDocs(postCol);\n        const postList = postSnapshot.docs.map(doc => doc.data());\n        this.setState({ posts: postList });\n\n        this.setState({ loading: false })\n      };\n\n      getPosts(firebaseDB);\n    };\n\n    getAdmins(firebaseDB);\n  }\n\n  render() {\n\n    if (this.getCookie(\"admin\")) {\n      return (\n\n        <CRow>\n\n          <CCol xs={12}>\n            <CCard>\n              <CCardHeader>\n                <h4 style={{ margin: '0' }}><strong>Posts</strong></h4>\n              </CCardHeader>\n              <CCardBody>\n                <CDataTable\n                  items={this.state.posts}\n                  fields={postFields}\n                  loading={this.state.loading}\n                  columnFilter\n                  tableFilter\n                  cleaner\n                  itemsPerPageSelect\n                  itemsPerPage={5}\n                  hover\n                  sorter\n                  pagination\n                  clickableRows\n                  // onRowClick={(item, index, col, e) => this.toggleDetails(item.id)}\n                  // onPageChange={(val) => console.log('new page:', val)}\n                  // onPagesChange={(val) => console.log('new pages:', val)}\n                  // onPaginationChange={(val) => console.log('new pagination:', val)}\n                  // onFilteredItemsChange={(val) => console.log('new filtered items:', val)}\n                  // onSorterValueChange={(val) => console.log('new sorter value:', val)}\n                  // onTableFilterChange={(val) => console.log('new table filter:', val)}\n                  // onColumnFilterChange={(val) => console.log('new column filter:', val)}\n                  scopedSlots={{\n                    'content':\n                      (item) => (\n                        <td>\n                          <LinesEllipsis\n                            text={item.content}\n                            maxLine='2'\n                            ellipsis='...'\n                            trimRight\n                            basedOn='letters'\n                          />\n                        </td>\n                      ),\n                    'createdOn':\n                      (item) => (\n                        <td>\n                          <FormatTimestamp seconds={(item.createdOn != null ? item.createdOn.seconds : \"N/A\")} />\n                        </td>\n                      ),\n                    'status':\n                      (item) => (\n                        <td>\n                          <CBadge color={getStatusBadge(item.status)}>\n                            {item.status}\n                          </CBadge>\n                        </td>\n                      ),\n                    'visibility':\n                      (item) => (\n                        <td>\n                          <CButton\n                            color=\"#4638c2\"\n                            variant=\"outline\"\n                            size=\"sm\"><CIcon content={(item.status === \"Active\") ? cilEye : cilEyeSlash} /></CButton>\n                        </td>\n                      ),\n                    'edit':\n                      (item) => (\n                        <td>\n                          <EditBtn EditRoute=\"/customer-form\" />\n                        </td>\n                      ),\n                    'remove':\n                      (item) => (\n                        <td>\n                          <RemoveBtn />\n                        </td>\n                      )\n                  }}\n                />\n              </CCardBody>\n              <CCardFooter style={{ textAlign: 'right' }}>\n                <CButton color=\"primary\">\n                  Create Post\n                </CButton>\n\n              </CCardFooter>\n            </CCard>\n          </CCol>\n\n\n          <CCol xs={12}>\n            <CCard>\n              <CCardHeader>\n                <h4 style={{ margin: '0' }}><strong>Users</strong></h4>\n              </CCardHeader>\n              <CCardBody>\n\n              </CCardBody>\n              <CCardFooter style={{ textAlign: 'right' }}>\n                <CButton color=\"primary\">Create User\n                </CButton>\n\n              </CCardFooter>\n            </CCard>\n          </CCol>\n\n\n          {/* Admins */}\n          <CCol xs={12}>\n            <CCard id=\"table\">\n              <CCardHeader>\n                <h4 style={{ margin: '0' }}><strong>Admins</strong></h4>\n              </CCardHeader>\n              <CCardBody>\n                <CDataTable\n                  items={this.state.admins}\n                  fields={adminFields}\n                  loading={this.state.loading}\n                  itemsPerPage={10}\n                  striped\n                  pagination\n                  scopedSlots={{\n                    'remove':\n                      (item) => (\n                        <td>\n                          <CButton\n                            size=\"sm\"\n                            color=\"danger\"\n                            variant=\"outline\"\n                            onClick={() => {\n                              this.removeAdmin(item.id, item.email)\n                            }}\n\n                          ><CIcon content={cilTrash} /></CButton>\n                        </td>\n                      )\n                  }}\n                />\n              </CCardBody>\n              <CCardFooter style={{ textAlign: 'right' }}>\n\n\n                <CRow>\n                  <CCol xs=\"8\">\n                    <CInput type=\"email\" placeholder=\"Enter new admin's email\" value={this.state.newAdminEmail} onChange={this.handleChangeEmail} />\n                  </CCol>\n\n                  <CCol xs=\"4\">\n                    <CButton onClick={this.assignAdmin} color=\"primary\">\n                      Assign\n                    </CButton>\n                  </CCol>\n                </CRow>\n\n\n\n              </CCardFooter>\n            </CCard>\n          </CCol>\n\n        </CRow >\n      )\n    } else {\n      return (\n        <Route render={({ history }) => (\n          history.push(\"/\")\n        )} />\n      )\n    }\n  }\n}\n\nexport default Settings"],"sourceRoot":""}