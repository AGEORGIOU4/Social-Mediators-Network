{"version":3,"sources":["reusable/interests.js","reusable/SwalMixin.js","views/profile/Profile-Form.js"],"names":["Interests","label","value","SwalMixing","icon","text","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","fire","title","ProfileForm","props","uploadPhoto","imagePath","concat","state","initialValues","email","storage","getStorage","storageRef","ref","image","setState","loading","uploadBytes","then","snapshot","getDownloadURL","url","picture","editUser","db","a","setDoc","doc","firstName","lastName","nickname","qualifications","areaOfInterest","bio","createdAt","location","handleChangeFirstName","bind","handleChangeLastName","handleChangeNickname","handleChangeQualifications","handleChangeBio","handleChangeAreaOfInterest","handleChangePicture","handleSubmit","this","getCookie","document","getElementById","event","target","showCancelButton","confirmButtonText","confirmButtonColor","result","isConfirmed","firebaseDB","window","href","preventDefault","cname","name","ca","decodeURIComponent","cookie","split","i","length","c","charAt","substring","indexOf","sm","md","style","flexBasis","margin","id","type","readOnly","required","onChange","marginBottom","size","rows","map","option","display","lg","xs","textAlign","paddingLeft","e","files","paddingRight","color","onClick","grow","maxLine","ellipsis","trimRight","basedOn","padding","src","width","height","shape","render","history","push","React","Component"],"mappings":"0UAoBeA,EApBU,CACvB,CACEC,MAAO,YAAaC,MAAO,aAE7B,CACED,MAAO,MAAOC,MAAO,OAEvB,CACED,MAAO,UAAWC,MAAO,WAE3B,CACED,MAAO,aAAcC,MAAO,cAE9B,CACED,MAAO,WAAYC,MAAO,YAE5B,CACED,MAAO,QAASC,MAAO,U,2BCfdC,EAAa,SAACC,EAAMC,GACjBC,IAAKC,MAAM,CACvBC,OAAO,EACPC,SAAU,aACVC,mBAAmB,EACnBC,MAAO,IACPC,kBAAkB,EAClBC,QAAS,SAACL,GACRA,EAAMM,iBAAiB,aAAcR,IAAKS,WAC1CP,EAAMM,iBAAiB,aAAcR,IAAKU,gBAIxCC,KAAK,CACTb,KAAMA,EACNc,MAAOb,K,QCULc,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA4ERC,YAAc,WAEZ,IAAMC,EAAY,UAAUC,OAAO,EAAKC,MAAMC,cAAcC,OAAOH,OAAO,WAGpEI,EAAUC,cACVC,EAAaC,YAAIH,EAASL,GACP,KAArB,EAAKE,MAAMO,OAKb,EAAKC,SAAS,CAAEC,SAAS,IAEzBC,YAAYL,EAAY,EAAKL,MAAMO,OAAOI,MAAK,SAACC,GAC9CC,YAAeP,YAAIH,EAASL,IACzBa,MAAK,SAACG,GACL,EAAKN,SAAS,CAAEO,QAASD,OAI7BnC,EAAW,UAAW,yBAEtB,EAAK6B,SAAS,CAAEC,SAAS,QAf3B9B,EAAW,UAAW,yBArFP,EAmJnBqC,SAnJmB,uCAmJR,WAAOC,GAAP,SAAAC,EAAA,sEACHC,YAAOC,YAAIH,EAAI,QAAS,EAAKjB,MAAME,OAAQ,CAC/CA,MAAO,EAAKF,MAAME,MAClBmB,UAAW,EAAKrB,MAAMqB,UACtBC,SAAU,EAAKtB,MAAMsB,SACrBC,SAAU,EAAKvB,MAAMuB,SACrBC,eAAgB,EAAKxB,MAAMwB,eAC3BC,eAAgB,EAAKzB,MAAMyB,eAC3BC,IAAK,EAAK1B,MAAM0B,IAChBX,QAAS,EAAKf,MAAMe,QACpBY,UAAW,EAAK3B,MAAM2B,YAVf,2CAnJQ,sDAGjB,EAAK3B,MAAQ,CACXC,cAAe,CACbC,MAAO,GACPmB,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,eAAgB,GAChBC,eAAgB,GAChBC,IAAK,GACLX,QAAS,aACTY,UAAW,IAGblB,SAAS,EAETP,MAAO,GACPmB,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,eAAgB,GAChBC,eAAgB,GAChBC,IAAK,GACLX,QAAS,aACTY,UAAW,GAEXpB,MAAO,IAGLX,EAAMgC,SAAS5B,QACjB,EAAKA,MAAMC,cAAgBL,EAAMgC,SAAS5B,MAE1C,EAAKA,MAAME,MAAQ,EAAKF,MAAMC,cAAcC,MAC5C,EAAKF,MAAMqB,UAAY,EAAKrB,MAAMC,cAAcoB,UAChD,EAAKrB,MAAMsB,SAAW,EAAKtB,MAAMC,cAAcqB,SAC/C,EAAKtB,MAAMuB,SAAW,EAAKvB,MAAMC,cAAcsB,SAC/C,EAAKvB,MAAMwB,eAAiB,EAAKxB,MAAMC,cAAcuB,eACrD,EAAKxB,MAAM0B,IAAM,EAAK1B,MAAMC,cAAcyB,IAC1C,EAAK1B,MAAMyB,eAAiB,EAAKzB,MAAMC,cAAcwB,eACrD,EAAKzB,MAAMe,QAAW,EAAKf,MAAMC,cAAcc,QAAW,EAAKf,MAAMC,cAAcc,QAAU,aAC7F,EAAKf,MAAM2B,UAAY,EAAK3B,MAAMC,cAAc0B,WAGlD,EAAKE,sBAAwB,EAAKA,sBAAsBC,KAA3B,gBAC7B,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,gBAC5B,EAAKE,qBAAuB,EAAKA,qBAAqBF,KAA1B,gBAC5B,EAAKG,2BAA6B,EAAKA,2BAA2BH,KAAhC,gBAClC,EAAKI,gBAAkB,EAAKA,gBAAgBJ,KAArB,gBACvB,EAAKK,2BAA6B,EAAKA,2BAA2BL,KAAhC,gBAClC,EAAKM,oBAAsB,EAAKA,oBAAoBN,KAAzB,gBAE3B,EAAKO,aAAe,EAAKA,aAAaP,KAAlB,gBArDH,E,qDAyDnB,WACMQ,KAAKC,UAAU,aACjBC,SAASC,eAAe,SAAS/D,MAAQ4D,KAAKtC,MAAMC,cAAcC,MAClEsC,SAASC,eAAe,aAAa/D,MAAQ4D,KAAKtC,MAAMC,cAAcoB,UACtEmB,SAASC,eAAe,YAAY/D,MAAQ4D,KAAKtC,MAAMC,cAAcqB,SACrEkB,SAASC,eAAe,YAAY/D,MAAQ4D,KAAKtC,MAAMC,cAAcsB,SACrEiB,SAASC,eAAe,kBAAkB/D,MAAQ4D,KAAKtC,MAAMC,cAAcuB,eAC3EgB,SAASC,eAAe,OAAO/D,MAAQ4D,KAAKtC,MAAMC,cAAcyB,O,mCAIpE,SAAsBgB,GAASJ,KAAK9B,SAAS,CAAEa,UAAWqB,EAAMC,OAAOjE,U,kCACvE,SAAqBgE,GAASJ,KAAK9B,SAAS,CAAEc,SAAUoB,EAAMC,OAAOjE,U,kCACrE,SAAqBgE,GAASJ,KAAK9B,SAAS,CAAEe,SAAUmB,EAAMC,OAAOjE,U,wCACrE,SAA2BgE,GAASJ,KAAK9B,SAAS,CAAEgB,eAAgBkB,EAAMC,OAAOjE,U,6BACjF,SAAgBgE,GAASJ,KAAK9B,SAAS,CAAEkB,IAAKgB,EAAMC,OAAOjE,U,wCAC3D,SAA2BgE,GAASJ,KAAK9B,SAAS,CAAEiB,eAAgBiB,EAAMC,OAAOjE,U,iCACjF,SAAoBgE,GAASJ,KAAK9B,SAAS,CAAEO,QAAS2B,EAAMC,OAAOjE,U,0BAiCnE,SAAagE,GAAQ,IAAD,OAGlB5D,IAAKW,KAAK,CAERZ,KAAM,gCACN+D,kBAAkB,EAClBhE,KAAM,WAENiE,kBAAkB,MAClBC,mBAAoB,YACnBnC,MAAK,SAACoC,GACHA,EAAOC,cAET,EAAKhC,SAASiC,KAEAnE,IAAKC,MAAM,CACvBC,OAAO,EACPC,SAAU,aACVC,mBAAmB,EACnBC,MAAO,IACPC,kBAAkB,EAClBC,QAAS,SAACL,GACRA,EAAMM,iBAAiB,aAAcR,IAAKS,WAC1CP,EAAMM,iBAAiB,aAAcR,IAAKU,gBAIxCC,KAAK,CACTb,KAAM,UACNc,MAAO,yBAGTwD,OAAOtB,SAASuB,KAAO,QAI3BT,EAAMU,mB,uBAiBR,SAAUC,GAIR,IAHA,IAAIC,EAAOD,EAAQ,IAEfE,EADgBC,mBAAmBhB,SAASiB,QACzBC,MAAM,KACpBC,EAAI,EAAGA,EAAIJ,EAAGK,OAAQD,IAAK,CAElC,IADA,IAAIE,EAAIN,EAAGI,GACY,MAAhBE,EAAEC,OAAO,IACdD,EAAIA,EAAEE,UAAU,GAElB,GAAwB,IAApBF,EAAEG,QAAQV,GACZ,OAAOO,EAAEE,UAAUT,EAAKM,OAAQC,EAAED,QAGtC,MAAO,K,oBAIT,WAAU,IAAD,OACP,OAAItB,KAAKC,UAAU,WAEf,eAAC,IAAD,WACE,cAAC,IAAD,CAAM0B,GAAI,GAAIC,GAAI,EAAGC,MAAO,CAAEC,UAAW,QAAzC,SAEE,eAAC,IAAD,WACE,cAAC,IAAD,UAAa,oBAAID,MAAO,CAAEE,OAAQ,OAArB,SAA8B,2DAE3C,cAAC,IAAD,UAEE,eAAC,IAAD,WAEE,cAAC,IAAD,oBACA,cAAC,IAAD,CACEC,GAAG,QACHC,KAAK,OACLjB,KAAK,QACLkB,UAAQ,IAEV,cAAC,IAAD,yBACA,cAAC,IAAD,CACEC,UAAQ,EACRF,KAAK,OACLD,GAAG,YACHhB,KAAK,YACLoB,SAAUpC,KAAKT,wBAGjB,cAAC,IAAD,wBACA,cAAC,IAAD,CACE0C,KAAK,OACLD,GAAG,WACHhB,KAAK,WACLoB,SAAUpC,KAAKP,uBAGjB,cAAC,IAAD,uBACA,cAAC,IAAD,CACEwC,KAAK,OACLD,GAAG,WACHhB,KAAK,WACLoB,SAAUpC,KAAKN,uBAGjB,cAAC,IAAD,yCACA,cAAC,IAAD,CACEuC,KAAK,OACLD,GAAG,iBACHhB,KAAK,iBACLoB,SAAUpC,KAAKL,6BAGjB,cAAC,IAAD,kCACA,cAAC,KAAD,CACEkC,MAAO,CAAEQ,aAAc,QACvBL,GAAG,MACHhB,KAAK,MACLsB,KAAK,KACLL,KAAK,WACLM,KAAK,IACLH,SAAUpC,KAAKJ,4BASzB,eAAC,IAAD,CAAM+B,GAAI,GAAIC,GAAI,EAAGC,MAAO,CAAEC,UAAW,QAAzC,UACE,eAAC,IAAD,WACE,cAAC,IAAD,+BAGA,cAAC,IAAD,UAGE,cAAC,IAAD,CAAS1F,MAAO4D,KAAKtC,MAAMyB,eAAgBiD,SAAUpC,KAAKH,2BAA1D,SACG3D,EAAUsG,KAAI,SAACC,GAAD,OACb,wBAA2BrG,MAAOqG,EAAOrG,MAAzC,SAAiDqG,EAAOtG,OAA3CsG,EAAOrG,iBAO5B,eAAC,IAAD,WACE,cAAC,IAAD,oBAGA,cAAC,IAAD,UAEE,gCACE,sBAAKyF,MAAO,CAAEa,QAAU1C,KAAKtC,MAAMS,QAAW,OAAS,SAAvD,UACE,cAAC,IAAD,CAAMwE,GAAG,KAAKC,GAAG,KAAKhB,GAAG,KAAKC,MAAO,CAAEgB,UAAW,OAAQC,YAAa,OAAvE,SACE,uBAAOb,KAAK,OAAOG,SAAU,SAACW,GAC5B,EAAK7E,SAAS,CAAED,MAAQ8E,EAAE1C,OAAO2C,MAAM,KACvC,EAAKtF,MAAMO,MAAQ8E,EAAE1C,OAAO2C,MAAM,GAC9B,EAAKtF,MAAMO,OACb,EAAKV,mBAGX,cAAC,IAAD,CAAMoF,GAAG,KAAKC,GAAG,KAAKhB,GAAG,KAAKC,MAAO,CAAEgB,UAAW,MAAOI,aAAc,OAAvE,SACE,cAAC,IAAD,CAASC,MAAM,YAAYC,QAASnD,KAAKzC,YAAzC,yBAIJ,qBAAKsE,MAAO,CAAEa,QAAU1C,KAAKtC,MAAMS,QAAW,QAAU,QAAxD,SACE,iCACE,cAAC,IAAD,UACE,cAAC,KAAD,CAAU+E,MAAM,UAAUE,MAAI,kBAU1C,eAAC,IAAD,WACE,cAAC,IAAD,UAAa,oBAAIvB,MAAO,CAAEE,OAAQ,OAArB,SAA8B,sDAC3C,cAAC,IAAD,UAEE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMa,GAAG,KAAKhB,GAAG,KAAKe,GAAG,IAAzB,SACE,gCACE,eAAC,IAAD,WACE,+BAAM,+CADR,IACyC3C,KAAKtC,MAAMC,cAAcC,SAGlE,eAAC,IAAD,WACE,+BAAM,oDADR,IAC8CoC,KAAKtC,MAAMqB,aAGzD,eAAC,IAAD,WACE,+BAAM,mDADR,IAC6CiB,KAAKtC,MAAMsB,YAGxD,eAAC,IAAD,WACE,+BAAM,kDADR,IAC4CgB,KAAKtC,MAAMuB,YAIvD,eAAC,IAAD,WACE,+BAAM,oEADR,IAC8De,KAAKtC,MAAMwB,kBAIzE,eAAC,IAAD,WACE,+BAAM,0DADR,IACoDc,KAAKtC,MAAMyB,kBAG/D,eAAC,IAAD,WACE,+BAAM,mDACN,cAAC,IAAD,CACE5C,KAAMyD,KAAKtC,MAAM0B,IACjBiE,QAAQ,IACRC,SAAS,MACTC,WAAS,EACTC,QAAQ,oBAQhB,cAAC,IAAD,CAAMZ,GAAG,KAAKhB,GAAG,IAAIe,GAAG,IAAId,MAAO,CAAEgB,UAAW,UAAhD,SACE,qBAAKhB,MAAO,CAAE4B,QAAS,QAAvB,SACE,cAAC,IAAD,CAAMC,IAAK1D,KAAKtC,MAAMe,QACpBkF,MAAM,MAAMC,OAAO,MACnBC,MAAM,4BAOhB,cAAC,IAAD,UACE,qBAAKhC,MAAO,CAAEgB,UAAW,OAAzB,SACE,cAAC,IAAD,CAASK,MAAM,UAAUC,QAASnD,KAAKD,aAAvC,iCAYV,cAAC,IAAD,CAAO+D,OAAQ,qBAAGC,QACRC,KAAK,Y,GAtXGC,IAAMC,WA6XjB7G","file":"static/js/24.44f32109.chunk.js","sourcesContent":["export const Interests = [\n  {\n    label: \"Computing\", value: 'Computing',\n  },\n  {\n    label: \"Law\", value: 'Law',\n  },\n  {\n    label: \"Physics\", value: 'Physics',\n  },\n  {\n    label: \"Technology\", value: 'Technology',\n  },\n  {\n    label: \"Business\", value: 'Business',\n  },\n  {\n    label: \"Other\", value: 'Other',\n  }\n]\nexport default Interests","import Swal from \"sweetalert2\"\n\nexport const SwalMixing = (icon, text) => {\n  const Toast = Swal.mixin({\n    toast: true,\n    position: 'bottom-end',\n    showConfirmButton: false,\n    timer: 3000,\n    timerProgressBar: false,\n    didOpen: (toast) => {\n      toast.addEventListener('mouseenter', Swal.stopTimer)\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\n    }\n  })\n\n  Toast.fire({\n    icon: icon,\n    title: text\n  })\n}\n","import React from 'react'\nimport { Route } from 'react-router';\nimport {\n  CRow,\n  CCol,\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CFormGroup,\n  CLabel,\n  CInput,\n  CTextarea,\n  CSelect,\n  CSpinner,\n} from '@coreui/react'\n\nimport { uploadBytes } from '@firebase/storage';\nimport { getStorage, ref, getDownloadURL } from '@firebase/storage';\n\nimport { CButton, CCardFooter, CImg } from \"@coreui/react\";\nimport { setDoc, doc } from 'firebase/firestore';\nimport LinesEllipsis from 'react-lines-ellipsis'\nimport Interests from 'src/reusable/interests';\nimport { firebaseDB } from 'src/reusable/firebaseConfig';\nimport Swal from 'sweetalert2';\nimport { SwalMixing } from 'src/reusable/SwalMixin';\n\nclass ProfileForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialValues: {\n        email: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        nickname: \"\",\n        qualifications: \"\",\n        areaOfInterest: \"\",\n        bio: \"\",\n        picture: \"avatar.png\",\n        createdAt: \"\",\n      },\n\n      loading: false,\n\n      email: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      nickname: \"\",\n      qualifications: \"\",\n      areaOfInterest: \"\",\n      bio: \"\",\n      picture: \"avatar.png\",\n      createdAt: \"\",\n\n      image: \"\",\n    };\n\n    if (props.location.state) { // Pass all attributes from profile\n      this.state.initialValues = props.location.state;\n\n      this.state.email = this.state.initialValues.email;\n      this.state.firstName = this.state.initialValues.firstName;\n      this.state.lastName = this.state.initialValues.lastName;\n      this.state.nickname = this.state.initialValues.nickname;\n      this.state.qualifications = this.state.initialValues.qualifications;\n      this.state.bio = this.state.initialValues.bio;\n      this.state.areaOfInterest = this.state.initialValues.areaOfInterest;\n      this.state.picture = (this.state.initialValues.picture) ? this.state.initialValues.picture : \"avatar.png\";\n      this.state.createdAt = this.state.initialValues.createdAt;\n    }\n\n    this.handleChangeFirstName = this.handleChangeFirstName.bind(this);\n    this.handleChangeLastName = this.handleChangeLastName.bind(this);\n    this.handleChangeNickname = this.handleChangeNickname.bind(this);\n    this.handleChangeQualifications = this.handleChangeQualifications.bind(this);\n    this.handleChangeBio = this.handleChangeBio.bind(this);\n    this.handleChangeAreaOfInterest = this.handleChangeAreaOfInterest.bind(this);\n    this.handleChangePicture = this.handleChangePicture.bind(this);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  componentDidMount() {\n    if (this.getCookie(\"session\")) {\n      document.getElementById(\"email\").value = this.state.initialValues.email;\n      document.getElementById(\"firstName\").value = this.state.initialValues.firstName;\n      document.getElementById(\"lastName\").value = this.state.initialValues.lastName;\n      document.getElementById(\"nickname\").value = this.state.initialValues.nickname;\n      document.getElementById(\"qualifications\").value = this.state.initialValues.qualifications;\n      document.getElementById(\"bio\").value = this.state.initialValues.bio;\n    }\n  }\n\n  handleChangeFirstName(event) { this.setState({ firstName: event.target.value }) }\n  handleChangeLastName(event) { this.setState({ lastName: event.target.value }) }\n  handleChangeNickname(event) { this.setState({ nickname: event.target.value }) }\n  handleChangeQualifications(event) { this.setState({ qualifications: event.target.value }) }\n  handleChangeBio(event) { this.setState({ bio: event.target.value }) }\n  handleChangeAreaOfInterest(event) { this.setState({ areaOfInterest: event.target.value }) }\n  handleChangePicture(event) { this.setState({ picture: event.target.value }) }\n\n\n  uploadPhoto = () => {\n\n    const imagePath = 'images/'.concat(this.state.initialValues.email).concat(\"-avatar\");\n\n    // Upload\n    const storage = getStorage();\n    const storageRef = ref(storage, imagePath);\n    if (this.state.image === '') {\n      SwalMixing(\"warning\", \"Forgot something? :)\");\n      return;\n    } else {\n\n      this.setState({ loading: true });\n\n      uploadBytes(storageRef, this.state.image).then((snapshot) => {\n        getDownloadURL(ref(storage, imagePath))\n          .then((url) => {\n            this.setState({ picture: url });\n\n          })\n\n        SwalMixing(\"success\", \"Uploaded succesfully!\");\n\n        this.setState({ loading: false });\n\n      });\n    }\n  }\n\n\n  handleSubmit(event) {\n\n\n    Swal.fire({\n\n      text: 'Is your profile card correct?',\n      showCancelButton: true,\n      icon: 'question',\n      // iconColor: '#e55353',\n      confirmButtonText: `Yes`,\n      confirmButtonColor: '#2eb85c'\n    }).then((result) => {\n      if (result.isConfirmed) {\n\n        this.editUser(firebaseDB);\n\n        const Toast = Swal.mixin({\n          toast: true,\n          position: 'bottom-end',\n          showConfirmButton: false,\n          timer: 3000,\n          timerProgressBar: false,\n          didOpen: (toast) => {\n            toast.addEventListener('mouseenter', Swal.stopTimer)\n            toast.addEventListener('mouseleave', Swal.resumeTimer)\n          }\n        })\n\n        Toast.fire({\n          icon: 'success',\n          title: 'Updated successfully'\n        })\n\n        window.location.href = \"/\";\n      }\n    })\n\n    event.preventDefault();\n  }\n\n  editUser = async (db) => {\n    await setDoc(doc(db, \"users\", this.state.email), {\n      email: this.state.email,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      nickname: this.state.nickname,\n      qualifications: this.state.qualifications,\n      areaOfInterest: this.state.areaOfInterest,\n      bio: this.state.bio,\n      picture: this.state.picture,\n      createdAt: this.state.createdAt\n    });\n  }\n\n  getCookie(cname) {\n    let name = cname + \"=\";\n    let decodedCookie = decodeURIComponent(document.cookie);\n    let ca = decodedCookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return \"\";\n  }\n\n\n  render() {\n    if (this.getCookie(\"session\")) {\n      return (\n        <CRow>\n          <CCol sm={12} md={6} style={{ flexBasis: 'auto' }}>\n\n            <CCard>\n              <CCardHeader><h4 style={{ margin: '0px' }}><strong>Edit Profile Card</strong></h4>\n              </CCardHeader>\n              <CCardBody>\n\n                <CFormGroup>\n\n                  <CLabel>Email</CLabel>\n                  <CInput\n                    id=\"email\"\n                    type=\"text\"\n                    name=\"email\"\n                    readOnly />\n\n                  <CLabel>First Name</CLabel>\n                  <CInput\n                    required\n                    type=\"text\"\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    onChange={this.handleChangeFirstName}\n                  />\n\n                  <CLabel>Last Name</CLabel>\n                  <CInput\n                    type=\"text\"\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    onChange={this.handleChangeLastName}\n                  />\n\n                  <CLabel>Nickname</CLabel>\n                  <CInput\n                    type=\"text\"\n                    id=\"nickname\"\n                    name=\"nickname\"\n                    onChange={this.handleChangeNickname}\n                  />\n\n                  <CLabel>Qualifications/Experiences</CLabel>\n                  <CInput\n                    type=\"text\"\n                    id=\"qualifications\"\n                    name=\"qualifications\"\n                    onChange={this.handleChangeQualifications}\n                  />\n\n                  <CLabel>Few words about you</CLabel>\n                  <CTextarea\n                    style={{ marginBottom: \"23px\" }}\n                    id=\"bio\"\n                    name=\"bio\"\n                    size=\"md\"\n                    type=\"textarea\"\n                    rows=\"7\"\n                    onChange={this.handleChangeBio}\n                  />\n\n                </CFormGroup>\n              </CCardBody>\n            </CCard>\n\n          </CCol>\n\n          <CCol sm={12} md={6} style={{ flexBasis: 'auto' }}>\n            <CCard>\n              <CCardHeader>\n                Area of interest\n              </CCardHeader>\n              <CCardBody>\n\n\n                <CSelect value={this.state.areaOfInterest} onChange={this.handleChangeAreaOfInterest}>\n                  {Interests.map((option) => (\n                    <option key={option.value} value={option.value}>{option.label}</option>\n                  ))}\n                </CSelect>\n\n              </CCardBody>\n            </CCard>\n\n            <CCard>\n              <CCardHeader>\n                Photo\n              </CCardHeader>\n              <CCardBody>\n\n                <div>\n                  <div style={{ display: (this.state.loading) ? \"none\" : \"block\" }}>\n                    <CCol lg=\"12\" xs=\"12\" md=\"12\" style={{ textAlign: \"left\", paddingLeft: '0px' }}>\n                      <input type=\"file\" onChange={(e) => {\n                        this.setState({ image: (e.target.files[0]) })\n                        this.state.image = e.target.files[0];\n                        if (this.state.image)\n                          this.uploadPhoto();\n                      }} />\n                    </CCol>\n                    <CCol lg=\"12\" xs=\"12\" md=\"12\" style={{ textAlign: \"end\", paddingRight: '0px' }}>\n                      <CButton color=\"secondary\" onClick={this.uploadPhoto}>Upload</CButton>\n                    </CCol>\n                  </div>\n\n                  <div style={{ display: (this.state.loading) ? \"block\" : \"none\" }}>\n                    <center>\n                      <CCol>\n                        <CSpinner color='primary' grow />\n                      </CCol>\n                    </center>\n                  </div>\n\n                </div>\n\n              </CCardBody>\n            </CCard>\n\n            <CCard>\n              <CCardHeader><h4 style={{ margin: '0px' }}><strong>Profile Card</strong></h4></CCardHeader>\n              <CCardBody>\n\n                <CRow>\n                  <CCol xs=\"12\" md=\"12\" lg=\"8\">\n                    <div>\n                      <CCol>\n                        <span><strong>Email: </strong></span> {this.state.initialValues.email}\n                      </CCol>\n\n                      <CCol>\n                        <span><strong>First name: </strong></span> {this.state.firstName}\n                      </CCol>\n\n                      <CCol>\n                        <span><strong>Last name: </strong></span> {this.state.lastName}\n                      </CCol>\n\n                      <CCol>\n                        <span><strong>Nickname: </strong></span> {this.state.nickname}\n                      </CCol>\n\n\n                      <CCol>\n                        <span><strong>Qualifications/Experiences: </strong></span> {this.state.qualifications}\n                      </CCol>\n\n\n                      <CCol>\n                        <span><strong>Area of interest: </strong></span> {this.state.areaOfInterest}\n                      </CCol>\n\n                      <CCol>\n                        <span><strong>About you: </strong></span>\n                        <LinesEllipsis\n                          text={this.state.bio}\n                          maxLine='1'\n                          ellipsis='...'\n                          trimRight\n                          basedOn='letters'\n                        />\n                      </CCol>\n                    </div>\n\n\n                  </CCol>\n\n                  <CCol xs=\"12\" md=\"4\" lg=\"4\" style={{ textAlign: \"center\" }}>\n                    <div style={{ padding: \"10px\" }}>\n                      <CImg src={this.state.picture}\n                        width=\"100\" height=\"100\"\n                        shape=\"rounded-circle\" />\n                    </div>\n                  </CCol>\n                </CRow>\n\n              </CCardBody>\n\n              <CCardFooter>\n                <div style={{ textAlign: 'end' }}>\n                  <CButton color='primary' onClick={this.handleSubmit}>\n                    Update</CButton>\n                </div>\n              </CCardFooter>\n            </CCard>\n\n          </CCol>\n        </CRow >\n\n      )\n    } else {\n      return (\n        <Route render={({ history }) => (\n          history.push(\"/\")\n        )} />\n      )\n    }\n  }\n}\n\nexport default ProfileForm\n"],"sourceRoot":""}